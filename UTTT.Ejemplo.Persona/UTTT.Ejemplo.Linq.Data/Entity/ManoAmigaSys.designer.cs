#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UTTT.Ejemplo.Linq.Data.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ManoAmiga")]
	public partial class ManoAmigaSysDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCorridas(Corridas instance);
    partial void UpdateCorridas(Corridas instance);
    partial void DeleteCorridas(Corridas instance);
    partial void InsertEmpCede(EmpCede instance);
    partial void UpdateEmpCede(EmpCede instance);
    partial void DeleteEmpCede(EmpCede instance);
    partial void InsertEmpleados(Empleados instance);
    partial void UpdateEmpleados(Empleados instance);
    partial void DeleteEmpleados(Empleados instance);
    partial void InsertEmpSexo(EmpSexo instance);
    partial void UpdateEmpSexo(EmpSexo instance);
    partial void DeleteEmpSexo(EmpSexo instance);
    partial void InsertUniAseguradoras(UniAseguradoras instance);
    partial void UpdateUniAseguradoras(UniAseguradoras instance);
    partial void DeleteUniAseguradoras(UniAseguradoras instance);
    partial void InsertUnidades(Unidades instance);
    partial void UpdateUnidades(Unidades instance);
    partial void DeleteUnidades(Unidades instance);
    partial void InsertUniDisponibilidad(UniDisponibilidad instance);
    partial void UpdateUniDisponibilidad(UniDisponibilidad instance);
    partial void DeleteUniDisponibilidad(UniDisponibilidad instance);
    partial void InsertUniEdoAgencia(UniEdoAgencia instance);
    partial void UpdateUniEdoAgencia(UniEdoAgencia instance);
    partial void DeleteUniEdoAgencia(UniEdoAgencia instance);
    partial void InsertUniTipoUnidad(UniTipoUnidad instance);
    partial void UpdateUniTipoUnidad(UniTipoUnidad instance);
    partial void DeleteUniTipoUnidad(UniTipoUnidad instance);
    partial void InsertUsPerfil(UsPerfil instance);
    partial void UpdateUsPerfil(UsPerfil instance);
    partial void DeleteUsPerfil(UsPerfil instance);
    partial void InsertUsStatus(UsStatus instance);
    partial void UpdateUsStatus(UsStatus instance);
    partial void DeleteUsStatus(UsStatus instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public ManoAmigaSysDataContext() : 
				base(global::UTTT.Ejemplo.Linq.Data.Properties.Settings.Default.ManoAmigaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ManoAmigaSysDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManoAmigaSysDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManoAmigaSysDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ManoAmigaSysDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Corridas> Corridas
		{
			get
			{
				return this.GetTable<Corridas>();
			}
		}
		
		public System.Data.Linq.Table<EmpCede> EmpCede
		{
			get
			{
				return this.GetTable<EmpCede>();
			}
		}
		
		public System.Data.Linq.Table<Empleados> Empleados
		{
			get
			{
				return this.GetTable<Empleados>();
			}
		}
		
		public System.Data.Linq.Table<EmpSexo> EmpSexo
		{
			get
			{
				return this.GetTable<EmpSexo>();
			}
		}
		
		public System.Data.Linq.Table<UniAseguradoras> UniAseguradoras
		{
			get
			{
				return this.GetTable<UniAseguradoras>();
			}
		}
		
		public System.Data.Linq.Table<Unidades> Unidades
		{
			get
			{
				return this.GetTable<Unidades>();
			}
		}
		
		public System.Data.Linq.Table<UniDisponibilidad> UniDisponibilidad
		{
			get
			{
				return this.GetTable<UniDisponibilidad>();
			}
		}
		
		public System.Data.Linq.Table<UniEdoAgencia> UniEdoAgencia
		{
			get
			{
				return this.GetTable<UniEdoAgencia>();
			}
		}
		
		public System.Data.Linq.Table<UniTipoUnidad> UniTipoUnidad
		{
			get
			{
				return this.GetTable<UniTipoUnidad>();
			}
		}
		
		public System.Data.Linq.Table<UsPerfil> UsPerfil
		{
			get
			{
				return this.GetTable<UsPerfil>();
			}
		}
		
		public System.Data.Linq.Table<UsStatus> UsStatus
		{
			get
			{
				return this.GetTable<UsStatus>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Corridas")]
	public partial class Corridas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCorrida;
		
		private string _strPuntoInicio;
		
		private string _strPuntoFinal;
		
		private int _idCede;
		
		private string _strTipoCorrida;
		
		private EntityRef<EmpCede> _EmpCede;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCorridaChanging(int value);
    partial void OnidCorridaChanged();
    partial void OnstrPuntoInicioChanging(string value);
    partial void OnstrPuntoInicioChanged();
    partial void OnstrPuntoFinalChanging(string value);
    partial void OnstrPuntoFinalChanged();
    partial void OnidCedeChanging(int value);
    partial void OnidCedeChanged();
    partial void OnstrTipoCorridaChanging(string value);
    partial void OnstrTipoCorridaChanged();
    #endregion
		
		public Corridas()
		{
			this._EmpCede = default(EntityRef<EmpCede>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCorrida", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCorrida
		{
			get
			{
				return this._idCorrida;
			}
			set
			{
				if ((this._idCorrida != value))
				{
					this.OnidCorridaChanging(value);
					this.SendPropertyChanging();
					this._idCorrida = value;
					this.SendPropertyChanged("idCorrida");
					this.OnidCorridaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPuntoInicio", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strPuntoInicio
		{
			get
			{
				return this._strPuntoInicio;
			}
			set
			{
				if ((this._strPuntoInicio != value))
				{
					this.OnstrPuntoInicioChanging(value);
					this.SendPropertyChanging();
					this._strPuntoInicio = value;
					this.SendPropertyChanged("strPuntoInicio");
					this.OnstrPuntoInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPuntoFinal", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strPuntoFinal
		{
			get
			{
				return this._strPuntoFinal;
			}
			set
			{
				if ((this._strPuntoFinal != value))
				{
					this.OnstrPuntoFinalChanging(value);
					this.SendPropertyChanging();
					this._strPuntoFinal = value;
					this.SendPropertyChanged("strPuntoFinal");
					this.OnstrPuntoFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCede", DbType="Int NOT NULL")]
		public int idCede
		{
			get
			{
				return this._idCede;
			}
			set
			{
				if ((this._idCede != value))
				{
					if (this._EmpCede.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCedeChanging(value);
					this.SendPropertyChanging();
					this._idCede = value;
					this.SendPropertyChanged("idCede");
					this.OnidCedeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTipoCorrida", DbType="VarChar(100)")]
		public string strTipoCorrida
		{
			get
			{
				return this._strTipoCorrida;
			}
			set
			{
				if ((this._strTipoCorrida != value))
				{
					this.OnstrTipoCorridaChanging(value);
					this.SendPropertyChanging();
					this._strTipoCorrida = value;
					this.SendPropertyChanged("strTipoCorrida");
					this.OnstrTipoCorridaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpCede_Corridas", Storage="_EmpCede", ThisKey="idCede", OtherKey="IdCede", IsForeignKey=true)]
		public EmpCede EmpCede
		{
			get
			{
				return this._EmpCede.Entity;
			}
			set
			{
				EmpCede previousValue = this._EmpCede.Entity;
				if (((previousValue != value) 
							|| (this._EmpCede.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmpCede.Entity = null;
						previousValue.Corridas.Remove(this);
					}
					this._EmpCede.Entity = value;
					if ((value != null))
					{
						value.Corridas.Add(this);
						this._idCede = value.IdCede;
					}
					else
					{
						this._idCede = default(int);
					}
					this.SendPropertyChanged("EmpCede");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpCede")]
	public partial class EmpCede : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCede;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Corridas> _Corridas;
		
		private EntitySet<Empleados> _Empleados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCedeChanging(int value);
    partial void OnIdCedeChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public EmpCede()
		{
			this._Corridas = new EntitySet<Corridas>(new Action<Corridas>(this.attach_Corridas), new Action<Corridas>(this.detach_Corridas));
			this._Empleados = new EntitySet<Empleados>(new Action<Empleados>(this.attach_Empleados), new Action<Empleados>(this.detach_Empleados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCede", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCede
		{
			get
			{
				return this._IdCede;
			}
			set
			{
				if ((this._IdCede != value))
				{
					this.OnIdCedeChanging(value);
					this.SendPropertyChanging();
					this._IdCede = value;
					this.SendPropertyChanged("IdCede");
					this.OnIdCedeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(255)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpCede_Corridas", Storage="_Corridas", ThisKey="IdCede", OtherKey="idCede")]
		public EntitySet<Corridas> Corridas
		{
			get
			{
				return this._Corridas;
			}
			set
			{
				this._Corridas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpCede_Empleados", Storage="_Empleados", ThisKey="IdCede", OtherKey="idCede")]
		public EntitySet<Empleados> Empleados
		{
			get
			{
				return this._Empleados;
			}
			set
			{
				this._Empleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Corridas(Corridas entity)
		{
			this.SendPropertyChanging();
			entity.EmpCede = this;
		}
		
		private void detach_Corridas(Corridas entity)
		{
			this.SendPropertyChanging();
			entity.EmpCede = null;
		}
		
		private void attach_Empleados(Empleados entity)
		{
			this.SendPropertyChanging();
			entity.EmpCede = this;
		}
		
		private void detach_Empleados(Empleados entity)
		{
			this.SendPropertyChanging();
			entity.EmpCede = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleados")]
	public partial class Empleados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEmpleado;
		
		private string _strNombre;
		
		private string _strApPaterno;
		
		private string _strApMaterno;
		
		private string _strEmail;
		
		private System.Nullable<System.DateTime> _dteFechaIngreso;
		
		private int _idCede;
		
		private int _idSexo;
		
		private EntityRef<EmpCede> _EmpCede;
		
		private EntityRef<EmpSexo> _EmpSexo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmpleadoChanging(int value);
    partial void OnidEmpleadoChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrApPaternoChanging(string value);
    partial void OnstrApPaternoChanged();
    partial void OnstrApMaternoChanging(string value);
    partial void OnstrApMaternoChanged();
    partial void OnstrEmailChanging(string value);
    partial void OnstrEmailChanged();
    partial void OndteFechaIngresoChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaIngresoChanged();
    partial void OnidCedeChanging(int value);
    partial void OnidCedeChanged();
    partial void OnidSexoChanging(int value);
    partial void OnidSexoChanged();
    #endregion
		
		public Empleados()
		{
			this._EmpCede = default(EntityRef<EmpCede>);
			this._EmpSexo = default(EntityRef<EmpSexo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApPaterno", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strApPaterno
		{
			get
			{
				return this._strApPaterno;
			}
			set
			{
				if ((this._strApPaterno != value))
				{
					this.OnstrApPaternoChanging(value);
					this.SendPropertyChanging();
					this._strApPaterno = value;
					this.SendPropertyChanged("strApPaterno");
					this.OnstrApPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApMaterno", DbType="VarChar(100)")]
		public string strApMaterno
		{
			get
			{
				return this._strApMaterno;
			}
			set
			{
				if ((this._strApMaterno != value))
				{
					this.OnstrApMaternoChanging(value);
					this.SendPropertyChanging();
					this._strApMaterno = value;
					this.SendPropertyChanged("strApMaterno");
					this.OnstrApMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this.OnstrEmailChanging(value);
					this.SendPropertyChanging();
					this._strEmail = value;
					this.SendPropertyChanged("strEmail");
					this.OnstrEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaIngreso", DbType="Date")]
		public System.Nullable<System.DateTime> dteFechaIngreso
		{
			get
			{
				return this._dteFechaIngreso;
			}
			set
			{
				if ((this._dteFechaIngreso != value))
				{
					this.OndteFechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._dteFechaIngreso = value;
					this.SendPropertyChanged("dteFechaIngreso");
					this.OndteFechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCede", DbType="Int NOT NULL")]
		public int idCede
		{
			get
			{
				return this._idCede;
			}
			set
			{
				if ((this._idCede != value))
				{
					if (this._EmpCede.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCedeChanging(value);
					this.SendPropertyChanging();
					this._idCede = value;
					this.SendPropertyChanged("idCede");
					this.OnidCedeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSexo", DbType="Int NOT NULL")]
		public int idSexo
		{
			get
			{
				return this._idSexo;
			}
			set
			{
				if ((this._idSexo != value))
				{
					if (this._EmpSexo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSexoChanging(value);
					this.SendPropertyChanging();
					this._idSexo = value;
					this.SendPropertyChanged("idSexo");
					this.OnidSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpCede_Empleados", Storage="_EmpCede", ThisKey="idCede", OtherKey="IdCede", IsForeignKey=true)]
		public EmpCede EmpCede
		{
			get
			{
				return this._EmpCede.Entity;
			}
			set
			{
				EmpCede previousValue = this._EmpCede.Entity;
				if (((previousValue != value) 
							|| (this._EmpCede.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmpCede.Entity = null;
						previousValue.Empleados.Remove(this);
					}
					this._EmpCede.Entity = value;
					if ((value != null))
					{
						value.Empleados.Add(this);
						this._idCede = value.IdCede;
					}
					else
					{
						this._idCede = default(int);
					}
					this.SendPropertyChanged("EmpCede");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpSexo_Empleados", Storage="_EmpSexo", ThisKey="idSexo", OtherKey="idSexo", IsForeignKey=true)]
		public EmpSexo EmpSexo
		{
			get
			{
				return this._EmpSexo.Entity;
			}
			set
			{
				EmpSexo previousValue = this._EmpSexo.Entity;
				if (((previousValue != value) 
							|| (this._EmpSexo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmpSexo.Entity = null;
						previousValue.Empleados.Remove(this);
					}
					this._EmpSexo.Entity = value;
					if ((value != null))
					{
						value.Empleados.Add(this);
						this._idSexo = value.idSexo;
					}
					else
					{
						this._idSexo = default(int);
					}
					this.SendPropertyChanged("EmpSexo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpSexo")]
	public partial class EmpSexo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSexo;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Empleados> _Empleados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSexoChanging(int value);
    partial void OnidSexoChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public EmpSexo()
		{
			this._Empleados = new EntitySet<Empleados>(new Action<Empleados>(this.attach_Empleados), new Action<Empleados>(this.detach_Empleados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSexo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idSexo
		{
			get
			{
				return this._idSexo;
			}
			set
			{
				if ((this._idSexo != value))
				{
					this.OnidSexoChanging(value);
					this.SendPropertyChanging();
					this._idSexo = value;
					this.SendPropertyChanged("idSexo");
					this.OnidSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(255)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpSexo_Empleados", Storage="_Empleados", ThisKey="idSexo", OtherKey="idSexo")]
		public EntitySet<Empleados> Empleados
		{
			get
			{
				return this._Empleados;
			}
			set
			{
				this._Empleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleados(Empleados entity)
		{
			this.SendPropertyChanging();
			entity.EmpSexo = this;
		}
		
		private void detach_Empleados(Empleados entity)
		{
			this.SendPropertyChanging();
			entity.EmpSexo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniAseguradoras")]
	public partial class UniAseguradoras : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAseguradora;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Unidades> _Unidades;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAseguradoraChanging(int value);
    partial void OnidAseguradoraChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public UniAseguradoras()
		{
			this._Unidades = new EntitySet<Unidades>(new Action<Unidades>(this.attach_Unidades), new Action<Unidades>(this.detach_Unidades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAseguradora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAseguradora
		{
			get
			{
				return this._idAseguradora;
			}
			set
			{
				if ((this._idAseguradora != value))
				{
					this.OnidAseguradoraChanging(value);
					this.SendPropertyChanging();
					this._idAseguradora = value;
					this.SendPropertyChanged("idAseguradora");
					this.OnidAseguradoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(255)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniAseguradoras_Unidades", Storage="_Unidades", ThisKey="idAseguradora", OtherKey="idAseguradora")]
		public EntitySet<Unidades> Unidades
		{
			get
			{
				return this._Unidades;
			}
			set
			{
				this._Unidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Unidades(Unidades entity)
		{
			this.SendPropertyChanging();
			entity.UniAseguradoras = this;
		}
		
		private void detach_Unidades(Unidades entity)
		{
			this.SendPropertyChanging();
			entity.UniAseguradoras = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unidades")]
	public partial class Unidades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUnidad;
		
		private string _strPlacas;
		
		private System.Nullable<int> _intModelo;
		
		private string _strMarca;
		
		private int _idTipoUnidad;
		
		private int _idEdoAgencia;
		
		private int _idAseguradora;
		
		private int _idDisponibilidad;
		
		private EntityRef<UniAseguradoras> _UniAseguradoras;
		
		private EntityRef<UniDisponibilidad> _UniDisponibilidad;
		
		private EntityRef<UniEdoAgencia> _UniEdoAgencia;
		
		private EntityRef<UniTipoUnidad> _UniTipoUnidad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUnidadChanging(int value);
    partial void OnidUnidadChanged();
    partial void OnstrPlacasChanging(string value);
    partial void OnstrPlacasChanged();
    partial void OnintModeloChanging(System.Nullable<int> value);
    partial void OnintModeloChanged();
    partial void OnstrMarcaChanging(string value);
    partial void OnstrMarcaChanged();
    partial void OnidTipoUnidadChanging(int value);
    partial void OnidTipoUnidadChanged();
    partial void OnidEdoAgenciaChanging(int value);
    partial void OnidEdoAgenciaChanged();
    partial void OnidAseguradoraChanging(int value);
    partial void OnidAseguradoraChanged();
    partial void OnidDisponibilidadChanging(int value);
    partial void OnidDisponibilidadChanged();
    #endregion
		
		public Unidades()
		{
			this._UniAseguradoras = default(EntityRef<UniAseguradoras>);
			this._UniDisponibilidad = default(EntityRef<UniDisponibilidad>);
			this._UniEdoAgencia = default(EntityRef<UniEdoAgencia>);
			this._UniTipoUnidad = default(EntityRef<UniTipoUnidad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUnidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUnidad
		{
			get
			{
				return this._idUnidad;
			}
			set
			{
				if ((this._idUnidad != value))
				{
					this.OnidUnidadChanging(value);
					this.SendPropertyChanging();
					this._idUnidad = value;
					this.SendPropertyChanged("idUnidad");
					this.OnidUnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPlacas", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strPlacas
		{
			get
			{
				return this._strPlacas;
			}
			set
			{
				if ((this._strPlacas != value))
				{
					this.OnstrPlacasChanging(value);
					this.SendPropertyChanging();
					this._strPlacas = value;
					this.SendPropertyChanged("strPlacas");
					this.OnstrPlacasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intModelo", DbType="Int")]
		public System.Nullable<int> intModelo
		{
			get
			{
				return this._intModelo;
			}
			set
			{
				if ((this._intModelo != value))
				{
					this.OnintModeloChanging(value);
					this.SendPropertyChanging();
					this._intModelo = value;
					this.SendPropertyChanged("intModelo");
					this.OnintModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strMarca", DbType="VarChar(100)")]
		public string strMarca
		{
			get
			{
				return this._strMarca;
			}
			set
			{
				if ((this._strMarca != value))
				{
					this.OnstrMarcaChanging(value);
					this.SendPropertyChanging();
					this._strMarca = value;
					this.SendPropertyChanged("strMarca");
					this.OnstrMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoUnidad", DbType="Int NOT NULL")]
		public int idTipoUnidad
		{
			get
			{
				return this._idTipoUnidad;
			}
			set
			{
				if ((this._idTipoUnidad != value))
				{
					if (this._UniTipoUnidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoUnidadChanging(value);
					this.SendPropertyChanging();
					this._idTipoUnidad = value;
					this.SendPropertyChanged("idTipoUnidad");
					this.OnidTipoUnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEdoAgencia", DbType="Int NOT NULL")]
		public int idEdoAgencia
		{
			get
			{
				return this._idEdoAgencia;
			}
			set
			{
				if ((this._idEdoAgencia != value))
				{
					if (this._UniEdoAgencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEdoAgenciaChanging(value);
					this.SendPropertyChanging();
					this._idEdoAgencia = value;
					this.SendPropertyChanged("idEdoAgencia");
					this.OnidEdoAgenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAseguradora", DbType="Int NOT NULL")]
		public int idAseguradora
		{
			get
			{
				return this._idAseguradora;
			}
			set
			{
				if ((this._idAseguradora != value))
				{
					if (this._UniAseguradoras.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAseguradoraChanging(value);
					this.SendPropertyChanging();
					this._idAseguradora = value;
					this.SendPropertyChanged("idAseguradora");
					this.OnidAseguradoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDisponibilidad", DbType="Int NOT NULL")]
		public int idDisponibilidad
		{
			get
			{
				return this._idDisponibilidad;
			}
			set
			{
				if ((this._idDisponibilidad != value))
				{
					if (this._UniDisponibilidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDisponibilidadChanging(value);
					this.SendPropertyChanging();
					this._idDisponibilidad = value;
					this.SendPropertyChanged("idDisponibilidad");
					this.OnidDisponibilidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniAseguradoras_Unidades", Storage="_UniAseguradoras", ThisKey="idAseguradora", OtherKey="idAseguradora", IsForeignKey=true)]
		public UniAseguradoras UniAseguradoras
		{
			get
			{
				return this._UniAseguradoras.Entity;
			}
			set
			{
				UniAseguradoras previousValue = this._UniAseguradoras.Entity;
				if (((previousValue != value) 
							|| (this._UniAseguradoras.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UniAseguradoras.Entity = null;
						previousValue.Unidades.Remove(this);
					}
					this._UniAseguradoras.Entity = value;
					if ((value != null))
					{
						value.Unidades.Add(this);
						this._idAseguradora = value.idAseguradora;
					}
					else
					{
						this._idAseguradora = default(int);
					}
					this.SendPropertyChanged("UniAseguradoras");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniDisponibilidad_Unidades", Storage="_UniDisponibilidad", ThisKey="idDisponibilidad", OtherKey="idDisponibilidad", IsForeignKey=true)]
		public UniDisponibilidad UniDisponibilidad
		{
			get
			{
				return this._UniDisponibilidad.Entity;
			}
			set
			{
				UniDisponibilidad previousValue = this._UniDisponibilidad.Entity;
				if (((previousValue != value) 
							|| (this._UniDisponibilidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UniDisponibilidad.Entity = null;
						previousValue.Unidades.Remove(this);
					}
					this._UniDisponibilidad.Entity = value;
					if ((value != null))
					{
						value.Unidades.Add(this);
						this._idDisponibilidad = value.idDisponibilidad;
					}
					else
					{
						this._idDisponibilidad = default(int);
					}
					this.SendPropertyChanged("UniDisponibilidad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniEdoAgencia_Unidades", Storage="_UniEdoAgencia", ThisKey="idEdoAgencia", OtherKey="idEdoAgencia", IsForeignKey=true)]
		public UniEdoAgencia UniEdoAgencia
		{
			get
			{
				return this._UniEdoAgencia.Entity;
			}
			set
			{
				UniEdoAgencia previousValue = this._UniEdoAgencia.Entity;
				if (((previousValue != value) 
							|| (this._UniEdoAgencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UniEdoAgencia.Entity = null;
						previousValue.Unidades.Remove(this);
					}
					this._UniEdoAgencia.Entity = value;
					if ((value != null))
					{
						value.Unidades.Add(this);
						this._idEdoAgencia = value.idEdoAgencia;
					}
					else
					{
						this._idEdoAgencia = default(int);
					}
					this.SendPropertyChanged("UniEdoAgencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniTipoUnidad_Unidades", Storage="_UniTipoUnidad", ThisKey="idTipoUnidad", OtherKey="idTipoUnidad", IsForeignKey=true)]
		public UniTipoUnidad UniTipoUnidad
		{
			get
			{
				return this._UniTipoUnidad.Entity;
			}
			set
			{
				UniTipoUnidad previousValue = this._UniTipoUnidad.Entity;
				if (((previousValue != value) 
							|| (this._UniTipoUnidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UniTipoUnidad.Entity = null;
						previousValue.Unidades.Remove(this);
					}
					this._UniTipoUnidad.Entity = value;
					if ((value != null))
					{
						value.Unidades.Add(this);
						this._idTipoUnidad = value.idTipoUnidad;
					}
					else
					{
						this._idTipoUnidad = default(int);
					}
					this.SendPropertyChanged("UniTipoUnidad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniDisponibilidad")]
	public partial class UniDisponibilidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDisponibilidad;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Unidades> _Unidades;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDisponibilidadChanging(int value);
    partial void OnidDisponibilidadChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public UniDisponibilidad()
		{
			this._Unidades = new EntitySet<Unidades>(new Action<Unidades>(this.attach_Unidades), new Action<Unidades>(this.detach_Unidades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDisponibilidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDisponibilidad
		{
			get
			{
				return this._idDisponibilidad;
			}
			set
			{
				if ((this._idDisponibilidad != value))
				{
					this.OnidDisponibilidadChanging(value);
					this.SendPropertyChanging();
					this._idDisponibilidad = value;
					this.SendPropertyChanged("idDisponibilidad");
					this.OnidDisponibilidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(255)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniDisponibilidad_Unidades", Storage="_Unidades", ThisKey="idDisponibilidad", OtherKey="idDisponibilidad")]
		public EntitySet<Unidades> Unidades
		{
			get
			{
				return this._Unidades;
			}
			set
			{
				this._Unidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Unidades(Unidades entity)
		{
			this.SendPropertyChanging();
			entity.UniDisponibilidad = this;
		}
		
		private void detach_Unidades(Unidades entity)
		{
			this.SendPropertyChanging();
			entity.UniDisponibilidad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniEdoAgencia")]
	public partial class UniEdoAgencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEdoAgencia;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Unidades> _Unidades;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEdoAgenciaChanging(int value);
    partial void OnidEdoAgenciaChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public UniEdoAgencia()
		{
			this._Unidades = new EntitySet<Unidades>(new Action<Unidades>(this.attach_Unidades), new Action<Unidades>(this.detach_Unidades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEdoAgencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEdoAgencia
		{
			get
			{
				return this._idEdoAgencia;
			}
			set
			{
				if ((this._idEdoAgencia != value))
				{
					this.OnidEdoAgenciaChanging(value);
					this.SendPropertyChanging();
					this._idEdoAgencia = value;
					this.SendPropertyChanged("idEdoAgencia");
					this.OnidEdoAgenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(255)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniEdoAgencia_Unidades", Storage="_Unidades", ThisKey="idEdoAgencia", OtherKey="idEdoAgencia")]
		public EntitySet<Unidades> Unidades
		{
			get
			{
				return this._Unidades;
			}
			set
			{
				this._Unidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Unidades(Unidades entity)
		{
			this.SendPropertyChanging();
			entity.UniEdoAgencia = this;
		}
		
		private void detach_Unidades(Unidades entity)
		{
			this.SendPropertyChanging();
			entity.UniEdoAgencia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniTipoUnidad")]
	public partial class UniTipoUnidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipoUnidad;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Unidades> _Unidades;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoUnidadChanging(int value);
    partial void OnidTipoUnidadChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public UniTipoUnidad()
		{
			this._Unidades = new EntitySet<Unidades>(new Action<Unidades>(this.attach_Unidades), new Action<Unidades>(this.detach_Unidades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoUnidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipoUnidad
		{
			get
			{
				return this._idTipoUnidad;
			}
			set
			{
				if ((this._idTipoUnidad != value))
				{
					this.OnidTipoUnidadChanging(value);
					this.SendPropertyChanging();
					this._idTipoUnidad = value;
					this.SendPropertyChanged("idTipoUnidad");
					this.OnidTipoUnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(255)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniTipoUnidad_Unidades", Storage="_Unidades", ThisKey="idTipoUnidad", OtherKey="idTipoUnidad")]
		public EntitySet<Unidades> Unidades
		{
			get
			{
				return this._Unidades;
			}
			set
			{
				this._Unidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Unidades(Unidades entity)
		{
			this.SendPropertyChanging();
			entity.UniTipoUnidad = this;
		}
		
		private void detach_Unidades(Unidades entity)
		{
			this.SendPropertyChanging();
			entity.UniTipoUnidad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsPerfil")]
	public partial class UsPerfil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPerfil;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPerfilChanging(int value);
    partial void OnidPerfilChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public UsPerfil()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPerfil", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPerfil
		{
			get
			{
				return this._idPerfil;
			}
			set
			{
				if ((this._idPerfil != value))
				{
					this.OnidPerfilChanging(value);
					this.SendPropertyChanging();
					this._idPerfil = value;
					this.SendPropertyChanged("idPerfil");
					this.OnidPerfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(255)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsPerfil_Usuarios", Storage="_Usuarios", ThisKey="idPerfil", OtherKey="idPerfil")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.UsPerfil = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.UsPerfil = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsStatus")]
	public partial class UsStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idStatus;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidStatusChanging(int value);
    partial void OnidStatusChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public UsStatus()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStatus", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idStatus
		{
			get
			{
				return this._idStatus;
			}
			set
			{
				if ((this._idStatus != value))
				{
					this.OnidStatusChanging(value);
					this.SendPropertyChanging();
					this._idStatus = value;
					this.SendPropertyChanged("idStatus");
					this.OnidStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(255)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsStatus_Usuarios", Storage="_Usuarios", ThisKey="idStatus", OtherKey="idStatus")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.UsStatus = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.UsStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private string _strUsername;
		
		private string _strPassword;
		
		private int _idStatus;
		
		private int _idPerfil;
		
		private EntityRef<UsPerfil> _UsPerfil;
		
		private EntityRef<UsStatus> _UsStatus;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnstrUsernameChanging(string value);
    partial void OnstrUsernameChanged();
    partial void OnstrPasswordChanging(string value);
    partial void OnstrPasswordChanged();
    partial void OnidStatusChanging(int value);
    partial void OnidStatusChanged();
    partial void OnidPerfilChanging(int value);
    partial void OnidPerfilChanged();
    #endregion
		
		public Usuarios()
		{
			this._UsPerfil = default(EntityRef<UsPerfil>);
			this._UsStatus = default(EntityRef<UsStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strUsername", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strUsername
		{
			get
			{
				return this._strUsername;
			}
			set
			{
				if ((this._strUsername != value))
				{
					this.OnstrUsernameChanging(value);
					this.SendPropertyChanging();
					this._strUsername = value;
					this.SendPropertyChanged("strUsername");
					this.OnstrUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPassword", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string strPassword
		{
			get
			{
				return this._strPassword;
			}
			set
			{
				if ((this._strPassword != value))
				{
					this.OnstrPasswordChanging(value);
					this.SendPropertyChanging();
					this._strPassword = value;
					this.SendPropertyChanged("strPassword");
					this.OnstrPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStatus", DbType="Int NOT NULL")]
		public int idStatus
		{
			get
			{
				return this._idStatus;
			}
			set
			{
				if ((this._idStatus != value))
				{
					if (this._UsStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidStatusChanging(value);
					this.SendPropertyChanging();
					this._idStatus = value;
					this.SendPropertyChanged("idStatus");
					this.OnidStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPerfil", DbType="Int NOT NULL")]
		public int idPerfil
		{
			get
			{
				return this._idPerfil;
			}
			set
			{
				if ((this._idPerfil != value))
				{
					if (this._UsPerfil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPerfilChanging(value);
					this.SendPropertyChanging();
					this._idPerfil = value;
					this.SendPropertyChanged("idPerfil");
					this.OnidPerfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsPerfil_Usuarios", Storage="_UsPerfil", ThisKey="idPerfil", OtherKey="idPerfil", IsForeignKey=true)]
		public UsPerfil UsPerfil
		{
			get
			{
				return this._UsPerfil.Entity;
			}
			set
			{
				UsPerfil previousValue = this._UsPerfil.Entity;
				if (((previousValue != value) 
							|| (this._UsPerfil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsPerfil.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._UsPerfil.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._idPerfil = value.idPerfil;
					}
					else
					{
						this._idPerfil = default(int);
					}
					this.SendPropertyChanged("UsPerfil");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsStatus_Usuarios", Storage="_UsStatus", ThisKey="idStatus", OtherKey="idStatus", IsForeignKey=true)]
		public UsStatus UsStatus
		{
			get
			{
				return this._UsStatus.Entity;
			}
			set
			{
				UsStatus previousValue = this._UsStatus.Entity;
				if (((previousValue != value) 
							|| (this._UsStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsStatus.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._UsStatus.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._idStatus = value.idStatus;
					}
					else
					{
						this._idStatus = default(int);
					}
					this.SendPropertyChanged("UsStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
